apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: mercury
  name: mercury
spec:
  replicas: {{.REPLICAS}}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      name: mercury
  template:
    metadata:
      labels:
        name: mercury
        app: mercury
    spec:
      containers:
      - name: mercury
        image: quay.io/ukhomeofficedigital/mercury:{{.DRONE_COMMIT_SHA}}
        imagePullPolicy: Always
        resources:
          limits:
            memory: 960Mi
        ports:
        - containerPort: 9100
        env:
        - name: JAVA_OPTS
          value: '-Xms150m -Xmx768m'
        - name: WEB_SERVICES_HOCS_URI
          valueFrom:
            configMapKeyRef:
              name: hocs
              key: web.services.hocs.uri
        - name: AWS_SQS_URI
          valueFrom:
            configMapKeyRef:
              name: hocs
              key: aws.sqs.uri
        - name: AWS_SQS_QUEUES_MERCURY
          valueFrom:
            configMapKeyRef:
              name: hocs
              key: aws.sqs.queues.mercury
        - name: AWS_S3_URI
          valueFrom:
            configMapKeyRef:
              name: hocs
              key: aws.s3.uri
        - name: AWS_S3_BUCKETS_MERCURY
          valueFrom:
            configMapKeyRef:
              name: hocs
              key: aws.s3.buckets.mercury
        - name: AWS_SQS_CREDENTIALS_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws
              key: aws.sqs.access.key
        - name: AWS_SQS_CREDENTIALS_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: aws
              key: aws.sqs.secret.key
        - name: AWS_S3_CREDENTIALS_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws
              key: aws.s3.access.key
        - name: AWS_S3_CREDENTIALS_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: aws
              key: aws.s3.secret.key
        - name: AWS_S3_KMS_KEY
          valueFrom:
            secretKeyRef:
              name: aws
              key: aws.s3.kms.id
        - name: AWS_S3_REGION
          valueFrom:
            configMapKeyRef:
              name: hocs
              key: aws.s3.region
        - name: WEB_SERVICES_HOCS_LOGIN_USER_NAME
          valueFrom:
            secretKeyRef:
              name: hocs
              key: web.services.hocs.username
        - name: WEB_SERVICES_HOCS_LOGIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: hocs
              key: web.services.hocs.password
      - name: tls
        image: quay.io/ukhomeofficedigital/nginx-proxy:v1.7.0
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        - containerPort: 443
        env:
        - name: PROXY_SERVICE_HOST
          value: 127.0.0.1
        - name: PROXY_SERVICE_PORT
          value: "9100"
        - name: ENABLE_UUID_PARAM
          value: "FALSE"
        - name: NAXSI_USE_DEFAULT_RULES
          value: "FALSE"
        - name: ERROR_REDIRECT_CODES
          value: "599"
        - name: ADD_NGINX_SERVER_CFG
          value: |
            add_header Cache-Control private;
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
        - name: SERVER_CERT
          value: /etc/secrets/tls-bundle.pem
        - name: SERVER_KEY
          value: /etc/secrets/tls-key.pem
        volumeMounts:
          - name: certs
            mountPath: /etc/secrets
            readOnly: true
      - name: vault-side-kick
        image: quay.io/ukhomeofficedigital/vault-sidekick-jks:v0.2.0
        imagePullPolicy: Always
        resources:
          limits:
            memory: "100Mi"
            cpu: 100m
          requests:
            memory: "50Mi"
            cpu: 100m
        args:
          - -output=/etc/secrets
          - -tls-skip-verify=true
          - -cn=pki:services/$NAMESPACE/pki/issue/default:common_name=mercury.${NAMESPACE}.svc.cluster.local,file=/etc/keystore/tls,fmt=bundle
        env:
          - name: VAULT_ADDR
            value: "https://vault.vault.svc.cluster.local:8200"
          - name: VAULT_TOKEN
            valueFrom:
              secretKeyRef:
                name: store-token
                key: token
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        volumeMounts:
          - mountPath: /etc/keystore
            name: certs
      volumes:
        - name: certs
          emptyDir: {}
